import 'dart:ffi';
import 'dart:math';

import 'package:flutter/material.dart';

void main() {
  return runApp( const DiceApp());
}

class DiceApp extends StatelessWidget {
  const DiceApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      home: DicePage()
    );
  }
}


class DicePage extends StatefulWidget {
  const DicePage({super.key});

  @override
  State<DicePage> createState() => _DicePageState();
}

class _DicePageState extends State<DicePage> {

  int leftDiceNumbers=5;
  int rightDiceNumbers=2;
  int middleDiceNumbers=3;
  late String resultText;
  late Color resultTextColor;
  @override
  void initState() {
    super.initState();
    resultText = "Roll the dice!";
    resultTextColor = Colors.white;
  }

  void rollDice(){
    setState(() {
      leftDiceNumbers=Random().nextInt(6)+1;
      rightDiceNumbers=Random().nextInt(6)+1;
      middleDiceNumbers=Random().nextInt(6)+1;

      if (leftDiceNumbers == middleDiceNumbers && middleDiceNumbers == rightDiceNumbers) {
        resultText = "ðŸŽ‰ You are lucky! You won the game!";
        resultTextColor = Colors.pink;
      } else {
        resultText = "ðŸ˜¢ You lost! Try again.";
        resultTextColor = Colors.white;
      }
    });


  }


  @override
  Widget build(BuildContext context) {
    return
    Scaffold(
      backgroundColor: Colors.teal,
      appBar: AppBar(
        title: Text('Dice'),
        backgroundColor: Colors.teal.shade900,
      ),
      body:Center(
        child:Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            Text("Roll and Win",style: TextStyle(fontSize: 50.0,fontFamily: 'Pacifico',color: Colors.white,fontWeight: FontWeight.bold)),
            SizedBox(height: 50.0),
            Row(
              mainAxisAlignment: MainAxisAlignment.center,
              children: [
                DiceWidget(diceNumber: leftDiceNumbers, onTap: rollDice),
                DiceWidget(diceNumber: middleDiceNumbers, onTap: rollDice),
                DiceWidget(diceNumber: rightDiceNumbers, onTap: rollDice),
              ],
            ),
            const SizedBox(height: 40.0),
            ElevatedButton(
              onPressed: rollDice,
              style: ElevatedButton.styleFrom(
                backgroundColor: Colors.teal.shade900,
                foregroundColor: Colors.white,
                padding: const EdgeInsets.symmetric(horizontal: 50, vertical: 15),
                textStyle: const TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
              ),
              child: const Text('Roll Dice'),
            ),
            const SizedBox(height: 30.0),
            ResultTextWidget(resultText: resultText, textColor: resultTextColor),
            ]
        )

      )
    );


  }
}

class DiceWidget extends StatelessWidget {
  final int diceNumber;
  final VoidCallback onTap;
  const DiceWidget({super.key, required this.diceNumber, required this.onTap});

  @override
  Widget build(BuildContext context) {
    return Expanded(child:
        GestureDetector(
          onTap: onTap,
          child: Image.asset('images/dice$diceNumber.png',
            height: 100.0,
            width: 50.0,
          ),
        ),
    );
  }
}

class ResultTextWidget extends StatelessWidget {
  final String resultText;
  final Color textColor;
  const ResultTextWidget({super.key, required this.resultText, required this.textColor});

  @override
  Widget build(BuildContext context) {
    return Container(
      padding: const EdgeInsets.all(12.0),
      decoration: BoxDecoration(
        color: Colors.black.withOpacity(0.3), // Semi-transparent background
        borderRadius: BorderRadius.circular(10),
      ),
      child: Text(
        resultText,
        style: TextStyle(fontSize: 22.0, color: textColor, fontWeight: FontWeight.bold),
        textAlign: TextAlign.center,
      ),
    );
  }
}


